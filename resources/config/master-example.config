# IF YOU MODIFY THIS CONFIG FILE, PLEASE RE-RUN UNIT TESTS
# AND AMEND THEM UNTIL THEY PASS.


#
# Configuration for communication between processes
#
comms {
    camera_server_ip = 10.8.0.4
    camera_server_pub_port = 5553

    live_feed_pub_port = 5555

    dangerzone_channel = ipc:///tmp/sailbot-obstacle-detection

    current_data_channel = ipc:///tmp/sailbot-currentdata-from-pi-controller
}


#
# Configuration for perceiving the world using sensor data, shareable across multiple programs
#
perception {

    sun_detection {
        # threshold value for pixel value of the sun
        sun_pixel_threshold = 10000
    }

    boat_detection {
        # List of model paths to be used. The key here doesn't matter
        models {
              boat_large =resources/models/boat_large.svm
              boat_medium = resources/models/boat_medium.svm
              boat_small = resources/models/boat_small.svm
        }
    }

}


#
# Configuration for the main obstacle detection program
#
adavision {

    # Boolean, turns on logging
    debug = true

    # mode of operation: {file, network}
    image_source = file

    # options for reading images from file system (used if image_source == file)
    file_input {
        #Input dir, used in file streams. Absolute path recommended
        input_frame_dir = resources/img/16bit
        #Boolean, doubles up read images
        double_up = true
    }

    imu {
        # stub, file, real
        mode = real
    }

    current_data {
        # stub, real
        mode = real
    }

    output {
        #the number of frames to skip
        frame_skip = 1

        data_dir = data
        log_dir = logs
    }
}


#
# Configuration for the program that publishes images over the network from the camera enclosure
#
camera_enclosure {

    # Log debug info?
    debug = true

    # mode of operation: {file, lepton}
    image_source = lepton

    # options for reading images from file system (used if image_source == file)
    file_input {
        # input directory containing frames to read (currently unused)
        input_frame_dir = "path/to/frames"
    }

    lepton {
        # which leptons to use
        use_lepton0 = true
        use_lepton1 = true

        # How often to check that the leptons are in good working condition
        status_check_interval_s = 5

        # flat field correction parameters
        # TODO: Currently, this field has no effect.
        ffc_behavior {
            # whether flat-field-correction should be left to the automatic driver.
            ffc_auto = true
            ffc_interval_s = 60
        }

        failure_behavior {
            # if a lepton is disconnected, this specifies the time delay to apply while resetting the connection
            reset_time_millis = 5000
        }

        sun_behavior {
            # what percentage of the time each lepton should be used when the sun is in the frame
            # should be a number between 0 and 100
            sun_duty_cycle_percent = 42
        }
    }

}
